//6) Turn indicator, no daytime light
 
scenario CarSystem002scenario006

load ../CarSystem002.asm  



//All off, day

//Check static checks

begin checkStaticFunctions
	check marketCode = EU;
	check armoredVehicle = true;
	check daytimeLight = false;
	check ambientLighting = true;
end //checkStaticFunctions

//Check init state

begin checkInitState
	check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	// Hazard Warning is not active
	check hazardWarningSwitchOn = false;
	check hazardWarningSwitchOn_Runn = false;
	check hazardWarningSwitchOn_Start = false;
	//Direction blinkers are off
	check blinkLeft = 0;
	check blinkLeftPulseRatio = NOPULSE;
	check blinkRight = 0;
	check blinkRightPulseRatio = NOPULSE;
	//Key is not inserted	
	check keyState_Previous = NOKEYINSERTED;
	//Tail lamp is fixed
	check tailLampLeftBlinkValue = 0;
	check tailLampLeftFixValue = 0;
	check tailLampLeftStatus = FIX;
	check tailLampRightBlinkValue  = 0;
	check tailLampRightFixValue  = 0;
	check tailLampRightStatus = FIX;
	//Light rotary switch
	check lightRotarySwitchPrevious = OFF;
	//Cornering lights off
	check corneringLightRight = 0;
	check corneringLightLeft = 0;
	//Low beam headlight
	check lowBeamLeft = 0;
	check lowBeamRight = 0;
	check not parkingLightON ;
	check reverseLight = 0;
	check brakeLampLeft = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check brakeLampCenterStatus = FIX;
end // checkInitState

//Using pitman arm during engine off -> no reaction
	set brakePedal := 0;
	set brightnessSensor := 280;
	set darknessModeSwitchOn := false;
	set hazardWarningSwitchOn := false;
	set keyState := NOKEYINSERTED;
	set lightRotarySwitch := OFF;
	set pitmanArmUpDown := DOWNWARD5;
	set reverseGear := false;
	
	step

//Engine start
	check keyState_Previous = NOKEYINSERTED;
	check lightRotarySwitchPrevious = OFF;
	check reverseLight = 0;
	check tailLampLeftBlinkValue = 0;
	check tailLampLeftFixValue = 0;
	check tailLampRightBlinkValue  = 0;
	check tailLampRightFixValue  = 0;
	//Cornering lights off
	check corneringLightRight = 0;
	check corneringLightLeft = 0;
	//Low beam headlight
	check lowBeamLeft = 0;
	check lowBeamRight = 0;
	check reverseLight = 0;
	check brakeLampLeft = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	//Turn the light rotary switch ON
	set keyState := KEYINIGNITIONONPOSITION;
	set pitmanArmUpDown := NEUTRAL_UD;
	
	step

//Start tip blink left
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	set pitmanArmUpDown := DOWNWARD5;
	
	step
	
//Again: Request for tip blink left -> Dark cycle will be completed
	check blinkLeft=100;
	check blinkLeftPulseRatio=PULSE11;
	check keyState_Previous=KEYINIGNITIONONPOSITION;
	check lightRotarySwitchPrevious=OFF;
	check pitmanArmUpDown_Buff=NEUTRAL_UD;
	check pitmanArmUpDown_RunnReq=DOWNWARD5;
	check reverseLight=0;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 300;
	set pitmanArmUpDown := DOWNWARD5;
	set reverseGear := false;
	set brakePedal := 0;
	
	step

//Release of pitman arm-> recognition of tip blinking	
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = DOWNWARD5;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	check blinkLeftPulseRatio = PULSE11;
	check blinkLeft = 100;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 300;
	set pitmanArmUpDown := NEUTRAL_UD;
	set reverseGear := false;
	set brakePedal := 0;
	set threeBlinkingCycle := false;
	
	step

//Request for tip blink right -> Postponed as dark cycle not completed	
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = DOWNWARD5;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	check blinkLeftPulseRatio = PULSE11;
	check blinkLeft = 100;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 0;
	set pitmanArmUpDown := UPWARD5;
	set reverseGear := false;
	set brakePedal := 0;
	set threeBlinkingCycle := false;
	
	step

//Request for tip blink right long
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = UPWARD5;
	check blinkLeftPulseRatio = NOPULSE;
	check blinkLeft = 0;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 300;
	set pitmanArmUpDown := UPWARD5_LONG;
	set reverseGear := false;
	set brakePedal := 0;
	set threeBlinkingCycle := false;
	
	step
	
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = UPWARD5_LONG;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	check blinkLeftPulseRatio = NOPULSE;
	check blinkLeft = 0;
	check blinkRightPulseRatio = PULSE11;
	check blinkRight = 100;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 300;
	set pitmanArmUpDown := UPWARD5_LONG;
	set reverseGear := false;
	set brakePedal := 0;
	set threeBlinkingCycle := false;
	
	step

//Release of pitman arm -> stop turn indication	
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = UPWARD5_LONG;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	check blinkLeftPulseRatio = NOPULSE;
	check blinkLeft = 0;
	check blinkRightPulseRatio = PULSE11;
	check blinkRight = 100;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := OFF;
	set hazardWarningSwitchOn := false;
	set darknessModeSwitchOn := false;
	set brightnessSensor := 300;
	set pitmanArmUpDown := NEUTRAL_UD;
	set reverseGear := false;
	set brakePedal := 0;
	set threeBlinkingCycle := false;
	
	step
	
	check keyState_Previous = KEYINIGNITIONONPOSITION;
	check lowBeamRight = 0;
	check brakeLampRight = 0;
	check brakeLampCenter = 0;
	check lowBeamLeft = 0;
	check brakeLampLeft = 0;
	check brakeLampCenterStatus = FIX;
	check hazardWarningSwitchOn_Runn = false;
	check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check hazardWarningSwitchOn_Start = false;
	check reverseLight = 0;
	check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_Buff = NEUTRAL_UD;
	check blinkLeftPulseRatio = NOPULSE;
	check blinkLeft = 0;
	check blinkRightPulseRatio = NOPULSE;
	check blinkRight = 0;

		